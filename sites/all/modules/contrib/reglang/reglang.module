<?php

/**
 * @file
 * Registration Language module file
 *
 * A helper Module that tries to circumvent some Drupal language behaviour problems.
 *
 */

/**
 * Contants
 */
define('REGLANG_REGISTER_OFF', 0);
define('REGLANG_REGISTER_CURRENT', 1);
define('REGLANG_REGISTER_DEFAULT', 2);
define('REGLANG_REGISTER_BROWSER', 3);

define('REGLANG_NOTIFY_OFF', 0);
define('REGLANG_NOTIFY_USER', 1);
define('REGLANG_NOTIFY_DEFAULT', 2);

define('REGLANG_NODE_OFF', 0);
define('REGLANG_NODE_CURRENT', 1);
define('REGLANG_NODE_DEFAULT', 2);

/**
 * Implementation of hook_menu().
 */
function reglang_menu() {
  $items = array();

  $items['admin/user/reglang'] = array(
    'title' => 'Registration Language',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('reglang_settings'),
    'access arguments' => array('administer users'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;

}

/**
 * Administtration form
 */
function reglang_settings() {

  $form['reglang'] = array(
    '#value' => t('This is a helper Module that tries to circumvent some Drupal language behaviour problems.'),
  );

  $form['reglang_option'] = array(
    '#type' => 'radios',
    '#title' => t('The language if a user uses the sites registration process should be'),
    '#default_value' => variable_get('reglang_option', REGLANG_REGISTER_OFF),
    '#options' => array(
      t('None - This is default Drupal behaviour.'),
      t('Current - Current language of the site. Probably what you want.'),
      t('Default - Default language of the site.'),
      t('Browser - Use the language set in the user\'s browser.'),
    ),
  );

  $form['reglang_notify_option'] = array(
    '#type' => 'radios',
    '#title' => t('The language used to mails in if a user is set'),
    '#default_value' => variable_get('reglang_notify_option', REGLANG_NOTIFY_OFF),
    '#options' => array(
      t('Do nothing - Drupal default behaviour.'),
      t('Current - Language of the user the mail is for. Probably what you want.'),
      t('Default - Default language of the site.'),
    ),
  );

  $form['reglang_node_option'] = array(
    '#type' => 'radios',
    '#title' => t('If a node is added or updated and has no language / "language neutral" set'),
    '#default_value' => variable_get('reglang_node_option', REGLANG_NODE_OFF),
    '#options' => array(
      t('Do nothing - Drupal default behaviour.'),
      t('Current - Force the currently used language.'),
      t('Default - Force the default language of the site.'),
    ),
  );

  return system_settings_form($form);
}


/**
 * Implementation of hook_user().
 */
function reglang_user($op, &$edit, &$account, $category = NULL) {
  //If no language already set and operation is insert
  if (!$account->language && $op == 'insert') {
    switch (variable_get('reglang_option', REGLANG_REGISTER_OFF)) {

      case REGLANG_REGISTER_CURRENT:
        global $language;
        break;

      case REGLANG_REGISTER_DEFAULT:
        $language = language_default();
        break;
	
      case REGLANG_REGISTER_BROWSER:
         $language = language_from_browser();
         break;

      case REGLANG_REGISTER_OFF:
      default:
        return;
    }
    db_query("UPDATE {users} SET language = '%s' WHERE uid = %d", $language->language, $account->uid);
  }
}

/**
 * Implementation of hook_mail_alter().
 */
function reglang_mail_alter(&$message) {
  //only check if the mail contains a user object
  if (isset($message['params']['account'])) {
    switch (variable_get('reglang_notify_option', REGLANG_NOTIFY_OFF)) {

      case REGLANG_NOTIFY_USER:
        //might already be the preferred language of the user but any way we have to load the language
        //so checking is equal to setting.
        $message['language'] = user_preferred_language($message['params']['account']);
        break;

      case REGLANG_NOTIFY_DEFAULT:
        $message['language'] = language_default();
        break;

      case REGLANG_NOTIFY_OFF:
      default:
        break;
    }
  }
}

function reglang_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  //if update or insert and no language set
  if (($op == 'insert' || $op == 'update') && !$node->language) {
    switch (variable_get('reglang_node_option', REGLANG_NODE_OFF)) {

      case REGLANG_NODE_CURRENT:
        global $language;
        break;

      case REGLANG_NODE_DEFAULT:
        $language = language_default();
        break;

      case REGLANG_NODE_OFF:
      default:
        return;
    }
    if ($language->language && $node->nid) {
      db_query('UPDATE {node} SET language = "%s" WHERE nid = %d', $language->language, $node->nid);
    }
  }
}
