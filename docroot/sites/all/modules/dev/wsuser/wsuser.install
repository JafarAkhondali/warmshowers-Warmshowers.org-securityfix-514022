<?php
/**
 * @file wsuser.install
 *
 * Updates, installs.
 */
/**
 * Add Index to the fullname column.
 */
function wsuser_update_6001() {
  $ret = array();
  db_add_index('wsuser', 'fullname', array('fullname'));
  // hook_update_N() no longer returns a $ret array. Instead, return
  // nothing or a translated string indicating the update ran successfully.
  // See http://drupal.org/node/224333#update_sql.
  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
}

/**
 * Add becomeavailable column to wsuser
 *
 * @return array
 */
function wsuser_update_6002() {
  $ret = array();
  db_add_column($ret, 'wsuser', 'becomeavailable', 'int', array('default' => 0));
  // hook_update_N() no longer returns a $ret array. Instead, return
  // nothing or a translated string indicating the update ran successfully.
  // See http://drupal.org/node/224333#update_sql.
  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
}

/**
 * Add fields related to unavailable marking and pestering.
 *
 * @return array
 */
function wsuser_update_6003() {
  $ret = array();
  // Timestamp at which they set themselves unavailable
  db_add_column($ret, 'wsuser', 'set_unavailable_timestamp', 'int', array('default' => 0));
  // Timestamp at which they set themselves available
  db_add_column($ret, 'wsuser', 'set_available_timestamp', 'int', array('default' => 0));
  // Timestamp when last availability pester was sent
  db_add_column($ret, 'wsuser', 'last_unavailability_pester', 'int', array('default' => 0));
  // hook_update_N() no longer returns a $ret array. Instead, return
  // nothing or a translated string indicating the update ran successfully.
  // See http://drupal.org/node/224333#update_sql.
  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
}

/**
 * Remove misnamed field and add the correct one.
 */
function wsuser_update_6004() {
  $ret = array();
  // Timestamp when last availability pester was sent
  if (!db_field_exists('wsuser', 'last_unavailability_pester')) {
    db_add_column($ret, 'wsuser', 'last_unavailability_pester', 'int', array('default' => 0));
  }
  if (db_field_exists('wsuser', 'last_unavailablility_pester')) {
    db_drop_field('wsuser', 'last_unavailablility_pester');
  }
  // hook_update_N() no longer returns a $ret array. Instead, return
  // nothing or a translated string indicating the update ran successfully.
  // See http://drupal.org/node/224333#update_sql.
  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
}

/**
 * Add hide_donation_status
 *
 * @return array
 */
function wsuser_update_6005() {
  $ret = array();
  // Allow to hide donation status, opt out of showing donation status
  if (!db_field_exists('wsuser', 'hide_donation_status')) {
    db_add_column($ret, 'wsuser', 'hide_donation_status', 'int', array('default' => 0));
  }
  // hook_update_N() no longer returns a $ret array. Instead, return
  // nothing or a translated string indicating the update ran successfully.
  // See http://drupal.org/node/224333#update_sql.
  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
}

/**
 * Add email_opt_out
 *
 * @return array
 */
function wsuser_update_6006() {
  $ret = array();
  // Allow to hide donation status, opt out of showing donation status
  if (!db_field_exists('wsuser', 'email_opt_out')) {
    db_add_column($ret, 'wsuser', 'email_opt_out', 'int', array('default' => 0));
  }
  // hook_update_N() no longer returns a $ret array. Instead, return
  // nothing or a translated string indicating the update ran successfully.
  // See http://drupal.org/node/224333#update_sql.
  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
}
