<?php
/**
 * @file wsuser.install
 *
 * Updates, installs.
 */
/**
 * Remove the stale and unreachable functions data
 */

/**
 * Since D7 has adjustable reset pass timeout, set it from our D6 version
 */
function wsuser_update_7001() {
  $ret = array("Update user_pass_reset_url_timeout");
  $old_timeout = variable_get('wsuser_user_pass_reset_url_timeout', 864000);
  variable_set('user_password_reset_timeout', $old_timeout);
  return $ret;
}

/**
 * Change timestamps to unsigned
 */
function wsuser_update_7002() {
  $timestamp_options = array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => FALSE,
  );
  foreach (array('becomeavailable', 'set_unavailable_timestamp', 'set_available_timestamp', 'last_unavailability_pester') as $field) {
    if (db_field_exists('wsuser', $field)) {
      drupal_set_message("Doing change_field on field $field");
      db_change_field('wsuser', $field, $field, $timestamp_options);
    }
  }
}

/**
 * Remove unused wsuser obsolete fields
 */
function wsuser_update_7003() {
  foreach (array('isstale', 'isstale_date', 'isstale_reason', 'isunreachable', 'unreachable_date', 'unreachable_reason', 'lastcorrespondence') as $field) {
    if (db_field_exists('wsuser', $field)) {
    }
    db_drop_field('wsuser', $field);
  }
}

// TODO: Implement removal of stale and unreachable
//function wsuser_update_70XX() {
//  $ret = array();
//  db_drop_field('wsuser', 'isstale');
//  db_add_index('wsuser', 'fullname', array('fullname'));
//  // hook_update_N() no longer returns a $ret array. Instead, return
//  // nothing or a translated string indicating the update ran successfully.
//  // See http://drupal.org/node/224333#update_sql.
//  return t('TODO Add a descriptive string here to show in the UI.') /* $ret */;
//}

