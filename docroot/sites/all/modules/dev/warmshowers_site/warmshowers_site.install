<?php
/**
 * @file
 * Install, update and uninstall functions for the warmshowers_site module.
 *
 */

/**
 * Implements hook_enable to make warmshowers_site and mailsystem relative to each other
 */
function warmshowers_site_enable() {
  db_update('system')
    ->fields(array('weight' => 10))
    ->condition('name', 'warmshowers_site', '=')
    ->execute();
  db_update('system')
    ->fields(array('weight' => 30))
    ->condition('name', 'mailsystem', '=')
    ->execute();
}


/**
 * Ah, the problem is that *mailsystem* must run *after* this module so that we can alter
 * the mail before it gets turned into html mail.
 * If htmlmail is not already enabled, this will have to be done
 * manually.
 */
function warmshowers_site_update_7001() {
  warmshowers_site_enable();
  return(t('Updated relative weights of warmshowers_site and mailsystem'));
}

/**
 * Enable the feature module with d7 specific things that have to be set up
 */
function warmshower_site_update_7002() {
  module_enable('ws_d7_upgrade_features');
  return t('Enabled ws_d7_upgrade_features feature module');
}


/**
 * Remove old views from system
 */
function warmshowers_site_update_7003() {
  // Delete views that we don't want any more
  $unwanted_views = array(
    'admin_content',
    'admin_user_review',
    'admin_users',
    'feedback_counts',
    'flagged_unresponsive',
    'flagged_users',
    'frontpage',
    'login_status',
    'negative_feedbacks_for_user',
    'node_administration',
    'nodes_review',
    'referrals',
    'tips',
    'tutorial_videos',
    'user_flagging',
    'users_with_ordrs',
    'advanced_user_admin',
    'junktest',
    'Frontpage',
  );

  ctools_include('export');

  foreach ($unwanted_views as $view_name) {
    $view = views_get_view($view_name);
    if (!empty($view)) {
      ctools_export_crud_set_status('views_view', $view, TRUE);
      $view->delete();
    }
  }
  return t('Removed several old views from the system');
}

/**
 * Migrate imagecache presets to image styles
 */
function warmshowers_site_update_7005() {
  module_enable(array('migrate_styles'));
  module_load_include('install', 'migrate_styles');
  migrate_styles_update_7000();
  module_disable(array('migrate_styles'));
  drupal_uninstall_modules(array('migrate_styles'));
  return t('Updated imagecache presets to styles');
}

/**
 * Remove old feedback views and enable new view features for member_feedback
 */
function warmshowers_site_update_7006() {
  // Delete member_feedback view
  $unwanted_views = array(
    'member_feedback',
    'user_referrals_by_referee',
    'user_referrals_by_referrer',
    'feedback_block'
  );

  ctools_include('export');

  foreach ($unwanted_views as $view_name) {
    $view = views_get_view($view_name);
    if (!empty($view)) {
      ctools_export_crud_set_status('views_view', $view, TRUE);
      $view->delete();
    }
  }
  $message = t('Removed old or obsolete feedback views from the system');

  // Enable new member_feedback view
  if (!module_exists('member_feedback_views')) {
    $modules = array('member_feedback_views');
    module_enable($modules);
  }
  $message = $message ."\n" . t('Added new member_feedback view to the system');
  return $message;
}

/**
 * Update tokens in ubercart messages
 *
 */
function warmshowers_site_update_7007() {
  $old_message = variable_get('uc_msg_order_submit', '') ;

  $new_message = preg_replace('/\[order-total\]/', '[uc_order:order-total]', $old_message);
  variable_set('uc_msg_order_submit', $new_message);
  return t('Updated tokens in uc_order messages');
}

/**
 * Remove old unwanted views and enable all new views features.
 */
function warmshowers_site_update_7008() {
  // Delete member_feedback view
  $unwanted_views = array(
    'advanced_user_admin',
    'unauth_content',
    'user_json',
    'map_slideshow',
    'member_list',
  );
  ctools_include('export');
  foreach ($unwanted_views as $view_name) {
    $view = views_get_view($view_name);
    if (!empty($view)) {
      ctools_export_crud_set_status('views_view', $view, TRUE);
      $view->delete();
    }
  }
  $message = t('Removed old or obsolete views from the system.');

  // Enable new views features
  $wanted_views = array(
    'ws_views_features' => array('variable'),
    'board_bios_views' => array('views_view'),
    'comments_review_views' => array('views_view'),
    'donation_page_views' => array('views_view'),
    'member_feedback_views' => array('views_view'),
    'order_vbo_views' => array('views_view'),
    'photo_contest_views' => array('views_view'),
    'random_member_views' => array('views_view'),
    'recent_forum_topics_views' => array('views_view'),
    'rss_feed_views' => array('views_view'),
    'system_logs_views' => array('views_view'),
    'translation_status_views' => array('views_view'),
    'mobile_app_content' => array('views_view'),
    'recent_feedback_views' => array('views_view'),
  );
  module_enable(array_keys($wanted_views));
  $message = $message ."  " . t('Enabled views features.');

  return $message;
}

/**
 * Enable the new robots text module which manages the robots.txt file through the CMS.
 */
function warmshowers_site_update_7009() {
  module_enable(array('robotstxt'));
}

/**
 * Remove all the old css and js injector rules.
 */
function warmshowers_site_update_7010() {
  $result = db_truncate('css_injector_rule')->execute();
  $result = db_truncate('js_injector_rule')->execute();

  return "Old CSS and JS injector rules removed.";
}

/**
 * Update URIs that were missed on profile pictures, see https://www.drupal.org/node/1109804#comment-5346770
 */
function warmshowers_site_update_7011() {
  $result = db_query("UPDATE {file_managed} SET uri = REPLACE(uri, 'files/pictures', 'public://pictures')");
  return "Updated uri for profile pictures.";
}

/**
 * Update weight of contact module so it runs before wsuser so wsuser can remove personal contact form
 */
function warmshowers_site_update_7012() {
  db_update('system')
    ->fields(array('weight' => -11))
    ->condition('name', 'contact', '=')
    ->execute();
  return "Updated weight of contact module in system table";
}

/**
 * Remove obsolete variables from variable_store
 */
function warmshowers_site_update_7013() {

  $result = db_query("DELETE FROM {variable_store} WHERE name='user_registration_help'");
  return "Removed obsolete variables from variable_store that confused features module.";
}

/**
 * Disable several ubercart rules not currently in use.
 */
function warmshowers_site_update_7014() {
  $rules = array('uc_recurring_renewal_email_completed', 'uc_recurring_renewal_email_failed', 'uc_recurring_renewal_email_expired', 'uc_role_notify_grant', 'uc_role_notify_revoke', 'uc_role_notify_renew', 'uc_role_notify_reminder', 'uc_checkout_customer_notification', 'uc_checkout_admin_notification','uc_order_update_email_customer' );
  foreach($rules as $rule) {
    $rules_config = rules_config_load($rule);
    if ($rules_config !== FALSE) {
      $rules_config->active = FALSE;
      $rules_config->save();
    }
  }
  return "Disabled ubercart email notification rules not currently in use";

}

/**
 * Remove extra fields from content types. Features does not do this for us,
 * see https://www.drupal.org/node/649298
 */
function warmshowers_site_update_7015() {

  $entity_types = array('trust_referral', 'product', 'faq', 'forum', 'page');

  foreach ($entity_types as $type) {
    $instance = field_info_instance('node', 'upload', $type);

    // Mark field for deletion.
    field_delete_instance($instance);

    // Remove field marked for deletion.
    field_purge_batch(20);
  }

  return "Removed redundant file attachment fields";
}

/**
 * Remove taxonomyextra field from forum
 */
function warmshowers_site_update_7016() {
  // Now remove taxonomy extra field from forum
  $instance = field_info_instance('node', 'taxonomyextra', 'forum');
  field_delete_instance($instance);
  field_purge_batch(20);

  return "Removed redundant taxonomyextra cruft field";
}

/**
 * Remove placement in regions via block module
 */
function warmshowers_site_update_7017() {
  $blocks = array(16, 17, 18);

  $affected_rows = db_update('block')
    ->fields(array('region' => -1))
    ->condition('module', 'block', '=')
    ->condition('delta', $blocks, 'IN')
    ->execute();

  return "Updated $affected_rows blocks to remove from non-context block placement";
}

/**
 * Update product cart button labels as necessary
 */
function warmshowers_site_update_7018() {
  $give_now = 'Give now!';
  $someday = '"Someday"';
  $hostingonly = 'Hosting Only';
  $updates = array(
    84338 => 'Give now!', // Basic $10
    84701 => 'Give now!', // Founder $100+
    84251 => 'Give now!', // Maintainer $50
    84249 => 'Give now!', // Supporter $25
    85035 => 'Hosting Only', // Hosting only $0
    83981 => "Someday!", // Free $0
  );
  $products = node_load_multiple(array_keys($updates));

  foreach ($updates as $nid => $changes) {
    $product = $products[$nid];
    $product->field_cart_button_label = array(
      'und' => array(
        0 => array(
          'value' => $updates[$nid],
          'format' => NULL,
          'safe_value' => $updates[$nid],
        ),
      ),
    );
    node_save($product);
  }
}
